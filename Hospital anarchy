namespace HospitalAnarchy
{
    class Program
    {
        static void Main(string[] args)
        {
            Search search = new Search();
            search.Work();
        }
    }

    class Patient
    {
        public Patient(string name, int age, string illness)
        {
            Name = name;
            Age = age;
            Illness = illness;
        }

        public string Name { get; private set; }
        public int Age { get; private set; }
        public string Illness { get; private set; }
    }

    class Search
    {
        private List<Patient> _patients = new List<Patient>
        {

        };

        public Search()
        {
            PatientDataBase();
        }

        private void PatientDataBase()
        {
            _patients.Add(new Patient("Зубенко Михаил Петрович", 34, "Диарея"));
            _patients.Add(new Patient("Айболит Станислав Львович", 65, "Тошнота"));
            _patients.Add(new Patient("Ганибал Лектер", 68, "Лейкимия"));
            _patients.Add(new Patient("Робин Гуд", 32, "Перелом бедра"));
            _patients.Add(new Patient("Уэйн Брюс", 44, "Перелом ключицы"));
            _patients.Add(new Patient("Квин Харли", 26, "Диарея"));
            _patients.Add(new Patient("Узумаки Наруто Минатович", 16, "Тошнота"));
            _patients.Add(new Patient("Иванов Иван Иванович", 47, "Выпадание ануса"));
            _patients.Add(new Patient("Степанов Иван Степанович", 48, "Выпадание ануса"));
            _patients.Add(new Patient("Фоминов Иван Фомич", 49, "Выпадание ануса"));
            _patients.Add(new Patient("Кузьмичов Иван Кузьмич", 50, "Переутомление"));

        }

        private void ShowOrderedByName()
        {
            var orderedPatientsByName = _patients.OrderBy(patient => patient.Name).ToList();

            ShowInfo(orderedPatientsByName);
        }

        private void ShowOrderedByAge()
        {
            var orderedPatientsByAge = _patients.OrderBy(patient => patient.Age).ToList();

            ShowInfo(orderedPatientsByAge);
        }

        private void ShowpatientsIllness()
        {
            Console.Write("Введите название болезни: ");

            string userInput = Console.ReadLine();

            var orderedPatientsByIllness = _patients.Where(patient => patient.Illness == userInput).ToList();

            ShowInfo(orderedPatientsByIllness);
        }

        private void ShowInfo(List<Patient> orderedPatients)
        {
            foreach (Patient patient in orderedPatients)
            {
                Console.WriteLine($"{patient.Name}. Возраст - {patient.Age}. Болезнь - {patient.Illness}");
            }
        }

        public void Work()
        {
            const string OrderedByNameCommand = "1";
            const string OrderedByAgeCommand = "2";
            const string OrderedByIllnessCommand = "3";
            const string ExitCommand = "4";

            bool isWorking = true;

            while (isWorking)
            {
                Console.WriteLine("Список больных: ");

                ShowInfo(_patients);

                Console.WriteLine($"\nЧтобы отсортировать больных по Фамилии, нажмите - {OrderedByNameCommand}.\n" +
                                  $"Чтобы отсортировать больных по возрасту, нажмите - {OrderedByAgeCommand}.\n" +
                                  $"Чтобы отсортировать больных по болезням, нажмите - {OrderedByIllnessCommand}.\n" +
                                  $"Чтобы выйти из приложения, нажмите - {ExitCommand}.");

                string userInput = Console.ReadLine();

                switch (userInput)
                {
                    case OrderedByNameCommand:
                        ShowOrderedByName();
                        break;

                    case OrderedByAgeCommand:
                        ShowOrderedByAge();
                        break;

                    case OrderedByIllnessCommand:
                        ShowpatientsIllness();
                        break;

                    case ExitCommand:
                        isWorking = false;
                        break;

                    default:
                        Console.WriteLine("Такого варианта сортировки нет.");
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }
    }
}
