namespace Store
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string ShowProductListCommand = "1";
            const string SellProductCommand = "2";
            const string ShowInventory = "3";
            const string ExitCommand = "4";

            bool isWorking = true;
            string userInput;

            Seller seller = new Seller();
            Customer customer = new Customer();
            Market market = new Market();

            while (isWorking)
            {
                Console.WriteLine($"Для просмотря товара нажмите - {ShowProductListCommand}.\n" +
                                  $"Для покупки товара нажмите - {SellProductCommand}.\n" +
                                  $"Для просмотря инвентаря нажмите - {ShowInventory}.\n" +
                                  $"Для выхода нажмите - {ExitCommand}.");

                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case ShowProductListCommand:
                        seller.ShowProducts();
                        break;

                    case SellProductCommand:
                        market.Trade(seller, customer);
                        break;

                    case ShowInventory:
                        customer.ShowInvertory();
                        break;

                    case ExitCommand:
                        isWorking = false;
                        break;

                    default:
                        Console.WriteLine("Введена неверная команда.");
                        break;
                }

                Console.ReadLine();
                Console.Clear();
            }
        }
    }

    class Product
    {
        public Product(string name, string level, int price)
        {
            Name = name;
            Level = level;
            Price = price;
        }

        public string Name { get; private set; }
        public string Level { get; private set; }
        public int Price { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($"{Name}. Класс - {Level}. {Price}$.");
        }
    }

    abstract class Person
    {
        protected List<Product> Products;

        public virtual void ShowProducts()
        {
            foreach (Product products in Products)
            {
                products.ShowInfo();
            }
        }
    }

    class Seller : Person
    {
        public Seller()
        {
            Products = new List<Product>();
            MakeProducts();
        }

        public void MakeProducts()
        {
            Products.Add(new Product("Меч истины", "Легендарный", 5000));
            Products.Add(new Product("Книга: некромантия для чайников", "Базовый", 15));
            Products.Add(new Product("Щенок цербера", "Мифический", 2500));
            Products.Add(new Product("Карта двадцати минутного приключения", "Героический", 400));
            Products.Add(new Product("Мантия невидимости", "Легендарный", 4500));
        }

        public Product TakeProducts(int userInput)
        {
            if (TryGetProduct(userInput, out Product product) == true)
            {
                return product;
            }
            else
            {
                return null;
            }
        }

        public bool TryGetProduct(int price, out Product product)
        {
            product = Products.Find(product => product.Price == price);
            return product != null;
        }

        public void RemoveProducts(Product product)
        {
            Products.Remove(product);
        }

        public bool IsEmpty()
        {
            if (Products.Count == 0)
            {
                Console.WriteLine("Товар закончился");
                return true;
            }

            return false;
        }
    }

    class Customer : Person
    {
        public Customer()
        {
            Products = new List<Product>();
        }

        public int Money { get; private set; } = 15000;

        public void ShowInvertory()
        {
            if (Products.Count == 0)
            {
                Console.WriteLine("Инвентарь пуст.");
            }
            else
            {
                ShowProducts();
            }
        }

        public void Buy(Product product)
        {
            Products.Add(product);
            Money -= product.Price;
        }
    }

    class Market
    {
        private Seller _seller;
        private Customer _customer;

        public void Trade(Seller seller, Customer customer)
        {
            int price;

            _seller = seller;
            _customer = customer;

            seller.ShowProducts();

            if (_seller.IsEmpty())
            {
                return;
            }
            else
            {
                Console.WriteLine($"Ваши деньги: {customer.Money}");
                Console.Write("Введите цену на товар, который хотите купить: ");

                price = ReadInt();

                if (_seller.TryGetProduct(price, out Product product))
                {
                    if (customer.Money >= product.Price)
                    {
                        _customer.Buy(product);
                        _seller.RemoveProducts(product);
                    }
                    else
                    {
                        Console.WriteLine("Недостаточно средств.");
                    }
                }
            }
        }

        private int ReadInt()
        {
            int value;

            string userInput;

            userInput = Console.ReadLine();

            while (int.TryParse(userInput, out value) == false)
            {
                Console.WriteLine("Введено некорректное значение, попробуй еще раз.");
                userInput = Console.ReadLine();
            }

            return value;
        }
    }
}
