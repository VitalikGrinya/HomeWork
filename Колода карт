namespace DeckCards
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Dealer dealer = new Dealer();
            dealer.ProcessApp();
        }
    }

    class Dealer
    {
        private Player _player = new Player();
        private Deck _deck = new Deck();

        public void ProcessApp()
        {
            const string AddPlayerCardCommand = "1";
            const string ShowPlayerCardCommand = "2";
            const string ExitCommand = "3";

            string userInput;
            bool isWorking = true;

            while (isWorking)
            {
                Console.WriteLine($"Для того, чтобы взять карту нажмите - {AddPlayerCardCommand}.\n" +
                                  $"Для того, чтобы посмотреть карты игрока нажмите - {ShowPlayerCardCommand}.\n" +
                                  $"Для того, чтобы выйти нажмите - {ExitCommand}.\n");

                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case AddPlayerCardCommand:
                        PassCardToPlayer();
                        break;

                    case ShowPlayerCardCommand:
                        _player.ShowAllCards();
                        break;

                    case ExitCommand:
                        isWorking = false;
                        break;

                    default:
                        Console.WriteLine("Такой команды нет.");
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }

       private void PassCardToPlayer()
        {
            if (_deck.IsEnoughCards())
            {
                _player.TakeCard(_deck.GiveCard());
                Console.WriteLine("Получена карта.");
            }
        }
    }

    class Card
    {
        public Card(string value, string suit)
        {
            Value = value;
            Suit = suit;
        }

        public string Value { get; private set; }
        public string Suit { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($"Масть: {Suit}. Значение: {Value}");
        }
    }

    class Deck
    {
        private Stack<Card> _cards = new Stack<Card>();

        public Deck()
        {
            List<Card> cards = MakeCards();

            Shuffle(cards);

            foreach (Card card in cards)
            { 
                _cards.Push(card);
            }
        }

        public Card GiveCard()
        {
            Card card = _cards.Pop();
            return card;
        }

        public bool IsEnoughCards()
        {
            if (_cards.Count > 0)
            {
                return true;
            }
            else
            {
                Console.WriteLine("В колоде нет карт.");
                return false;
            }
        }

        private List<Card> MakeCards()
        {
            List<Card> cards = new List<Card>();

            string[] valueCard = { "9", "10", "Валет", "Дама", "Король", "Туз" };
            string[] suitCard = { "Пика", "Креста", "Буба", "Черва" };

            for (int i = 0; i < valueCard.Length; i++)
            {
                for (int j = 0; j < suitCard.Length; j++)
                {
                    Card card = new Card(valueCard[i], suitCard[j]);
                    cards.Add(card);
                }
            }

            return cards;
        }

        private void Shuffle(List<Card> cards)
        {
            Random random = new Random();

            int randomNumber;
            Card tempCard;

            for (int i = cards.Count - 1; i > 0; i--)
            {
                randomNumber = random.Next(i + 1);
                tempCard = cards[randomNumber];
                cards[randomNumber] = cards[i];
                cards[i] = tempCard;
            }
        }
    }

    class Player
    {
        private Stack<Card> _cards = new Stack<Card>();

        public void TakeCard(Card card)
        {
            _cards.Push(card);
        }

        public void ShowAllCards()
        {
            Console.WriteLine("Карты игрока: ");

            if (_cards.Count > 0)
            {
                foreach (Card card in _cards)
                {
                    card.ShowInfo();
                }
            }
        }
    }
}
